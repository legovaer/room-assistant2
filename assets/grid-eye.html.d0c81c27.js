import{_ as o,r as i,o as r,c as d,a as e,b as n,d as t,e as s}from"./app.56088427.js";const l={},c=e("h1",{id:"grid-eye",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#grid-eye","aria-hidden":"true"},"#"),n(" Grid-EYE")],-1),u=e("p",null,[e("strong",null,"Integration Key:"),n(),e("code",null,"gridEye")],-1),p={href:"https://www.sparkfun.com/products/14607",target:"_blank",rel:"noopener noreferrer"},h=e("p",null,"This integration will provide a sensor that contains a count of people in the room. It also includes their coordinates (relative to the sensor view) in the sensor attributes.",-1),m=e("h2",{id:"requirements",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#requirements","aria-hidden":"true"},"#"),n(" Requirements")],-1),b=e("p",null,[n("The sensor needs to be connected to the I"),e("sup",null,"2"),n("C pins on your machine.")],-1),v=e("h3",{id:"running-with-nodejs",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#running-with-nodejs","aria-hidden":"true"},"#"),n(" Running with NodeJS")],-1),k={href:"https://github.com/Automattic/node-canvas#compiling",target:"_blank",rel:"noopener noreferrer"},g=s(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev
<span class="token function">sudo</span> <span class="token function">npm</span> i <span class="token parameter variable">--global</span> --unsafe-perm room-assistant
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>For Raspberry Pi devices the I<sup>2</sup>C interface also needs to be enabled using <code>sudo raspi-config</code> and then enabling the I<sup>2</sup>C option under Advanced Options.</p><h3 id="running-with-docker" tabindex="-1"><a class="header-anchor" href="#running-with-docker" aria-hidden="true">#</a> Running with Docker</h3><p>Your i2c device needs to be enabled on the host and mapped into the container as a device like shown below.</p><details class="custom-container details"><summary>Example docker-compose.yml</summary><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3&#39;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">room-assistant</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> mkerix/room<span class="token punctuation">-</span>assistant
    <span class="token key atrule">network_mode</span><span class="token punctuation">:</span> host
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> /var/run/dbus<span class="token punctuation">:</span>/var/run/dbus
    <span class="token key atrule">devices</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> /dev/i2c<span class="token punctuation">-</span><span class="token number">1</span>
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">NODE_CONFIG</span><span class="token punctuation">:</span> <span class="token punctuation">&gt;</span><span class="token scalar string">
        {
          &quot;global&quot;: {
            &quot;instanceName&quot;: &quot;changeme&quot;,
            &quot;integrations&quot;: [&quot;gridEye&quot;]
          }
        }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="running-with-home-assistant-os" tabindex="-1"><a class="header-anchor" href="#running-with-home-assistant-os" aria-hidden="true">#</a> Running with Home Assistant OS</h3>`,6),f={href:"https://www.home-assistant.io/hassio/enable_i2c/",target:"_blank",rel:"noopener noreferrer"},y=e("code",null,"config.txt",-1),_=s(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>dtparam=i2c1=on
dtparam=i2c_arm=on
dtparam=i2c_baudrate=10000
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Reboot after you imported your config in the supervisor.</p><h2 id="sensor-placement" tabindex="-1"><a class="header-anchor" href="#sensor-placement" aria-hidden="true">#</a> Sensor placement</h2><p>When placing your sensor you need to consider a few factors to get reliable results:</p><ul><li>Don&#39;t face the sensor towards a source of heat that is less than 5 meters away, for example radiators or windows.</li><li>Make sure the sensor has a clear view of all areas that you want to track.</li><li>Consider the range of the sensor, the further away people are the harder it will be to reliably detect them.</li><li>Consider the field of view as stated in the datasheet.</li></ul><h2 id="settings" tabindex="-1"><a class="header-anchor" href="#settings" aria-hidden="true">#</a> Settings</h2><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>busNumber</code></td><td>Number</td><td><code>1</code></td><td>I<sup>2</sup>C bus number of your machine that the sensor is connected to.</td></tr><tr><td><code>address</code></td><td>Number</td><td><code>0x69</code></td><td>I<sup>2</sup>C address of the D6T sensor that you want to use.</td></tr><tr><td><code>deltaThreshold</code></td><td>Number</td><td><code>2</code></td><td>Minimum temperature difference between average and single temperature pixel in \xB0C for it to be considered as human presence. Increase if you are seeing false positives, decrease if you are seeing false negatives.</td></tr><tr><td><code>maskZeroBasedValues</code></td><td>Boolean</td><td><code>false</code></td><td>Mask values &lt; 1 that are incorrectly reported, replacing with nearest valid value or mean of grid for first pixel.</td></tr><tr><td><code>heatmap</code></td><td><a href="#heatmap">Heatmap</a></td><td></td><td>A number of options for configuring the heatmap output.</td></tr></tbody></table><h3 id="heatmap" tabindex="-1"><a class="header-anchor" href="#heatmap" aria-hidden="true">#</a> Heatmap</h3><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>enabled</code></td><td>Boolean</td><td><code>true</code></td><td>Whether the heatmap generation should be enabled or not. Turn this off if you notice very high CPU usage.</td></tr><tr><td><code>minTemperature</code></td><td>Number</td><td><code>16</code></td><td>Temperature that will be considered the lower bound for the color scale in \xB0C.</td></tr><tr><td><code>maxTemperature</code></td><td>Number</td><td><code>30</code></td><td>Temperature that will be considered the upper bound for the color scale in \xB0C.</td></tr><tr><td><code>rotation</code></td><td>Number</td><td><code>0</code></td><td>The amount of degrees that the heatmap output image should be rotated. Only <code>0</code>, <code>90</code>, <code>180</code> or <code>270</code> are supported as values.</td></tr><tr><td><code>drawTemperatures</code></td><td>Boolean</td><td><code>true</code></td><td>Whether the actual temperature values should be drawn on the heatmap or not.</td></tr></tbody></table><details class="custom-container details"><summary>Example Config</summary><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">global</span><span class="token punctuation">:</span>
  <span class="token key atrule">integrations</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> gridEye
<span class="token key atrule">gridEye</span><span class="token punctuation">:</span>
  <span class="token key atrule">deltaThreshold</span><span class="token punctuation">:</span> <span class="token number">2</span>
  <span class="token key atrule">heatmap</span><span class="token punctuation">:</span>
    <span class="token key atrule">minTemperature</span><span class="token punctuation">:</span> <span class="token number">16</span>
    <span class="token key atrule">maxTemperature</span><span class="token punctuation">:</span> <span class="token number">30</span>
    <span class="token key atrule">rotation</span><span class="token punctuation">:</span> <span class="token number">180</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,10);function w(x,T){const a=i("ExternalLinkIcon");return r(),d("div",null,[c,u,e("p",null,[n("The Grid-EYE sensor by Panasonic is a thermopile sensor that can be used to measure a 8x8 matrix of temperatures in front of its lense. This data can be used to detect human presence in the room, even if the person is stationary. This is done by analyzing the temperature readings for localized peaks, i.e. certain spots have a notably higher temperature than the rest. SparkFun sells a "),e("a",p,[n("version of the sensor"),t(a)]),n(" that can be easily connected to Linux boards and will also work with this component.")]),h,m,b,v,e("p",null,[n("To enable heatmap generation you may be required to install some "),e("a",k,[n("additional system packages"),t(a)]),n(" for compilation:")]),g,e("p",null,[n("You will need to enable the i2c interface by following the "),e("a",f,[n("official Home Assistant OS guide"),t(a)]),n(". The "),y,n(" file that you create should also contain an additional option, leading to the following contents:")]),_])}const E=o(l,[["render",w],["__file","grid-eye.html.vue"]]);export{E as default};
