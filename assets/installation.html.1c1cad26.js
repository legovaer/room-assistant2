import{_ as l}from"./compilation-msgs.0e8cd31d.js";import{_ as d,r as o,o as c,c as u,a as s,b as e,d as n,w as r,e as t}from"./app.e62c03da.js";const h={},m=s("h1",{id:"installation",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#installation","aria-hidden":"true"},"#"),e(" Installation")],-1),p={class:"custom-container tip"},v=s("p",{class:"custom-container-title"},"TIP",-1),b=t('<h2 id="running-with-nodejs" tabindex="-1"><a class="header-anchor" href="#running-with-nodejs" aria-hidden="true">#</a> Running with NodeJS</h2><h3 id="recommended-for" tabindex="-1"><a class="header-anchor" href="#recommended-for" aria-hidden="true">#</a> Recommended for...</h3><p>Dedicated or resource-limited computers, like Raspberry Pis. Has least overhead but may conflict with other services, particularly those based on different versions of Node.js.</p><h3 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h3>',4),g={href:"https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions",target:"_blank",rel:"noopener noreferrer"},f=t(`<p>room-assistant instances use some native dependencies for discovering each other in the local network using mDNS and providing health checks for systemd. You will require two additional system packages to get this working:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libavahi-compat-libdnssd-dev libsystemd-dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Note that some of the integrations may also require system packages to be installed, please look at the documentation of the integrations you want to use for this information.</p><h3 id="installation-1" tabindex="-1"><a class="header-anchor" href="#installation-1" aria-hidden="true">#</a> Installation</h3><p>You can install room-assistant using npm with the following command:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">npm</span> i <span class="token parameter variable">--global</span> --unsafe-perm room-assistant
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>npm will link the binary for running the software, usually into <code>/usr/bin/room-assistant</code>. If the directory is already in your <code>PATH</code> you can start it directly by typing <code>room-assistant</code>. Otherwise you can start it by typing the full path name of where it was installed.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>During installation you may see a lot of messages like the one in the image below scroll by. Don&#39;t worry - these are not errors! This is just the output of dependencies being compiled. As long as npm does not say that the installation ran into an error at the end you are good.</p><p><img src="`+l+`" alt="compilation messages"></p></div><h3 id="making-it-a-service" tabindex="-1"><a class="header-anchor" href="#making-it-a-service" aria-hidden="true">#</a> Making it a service</h3><p>To make sure room-assistant always runs on your machine you can create a system service for it. Create the file <code>/etc/systemd/system/room-assistant.service</code> similar to the following example:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[Unit]
Description=room-assistant service

[Service]
Type=notify
ExecStart=/usr/local/bin/room-assistant
WorkingDirectory=/home/pi/room-assistant
TimeoutStartSec=120
TimeoutStopSec=30
Restart=always
RestartSec=10
WatchdogSec=60
User=pi

[Install]
WantedBy=multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After you have your config ready - in the above example it should be located in <code>/home/pi/room-assistant/config/</code> - you can start and enable the service with:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> room-assistant.service
<span class="token function">sudo</span> systemctl start room-assistant.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="running-with-docker" tabindex="-1"><a class="header-anchor" href="#running-with-docker" aria-hidden="true">#</a> Running with Docker</h2><h3 id="recommended-for-1" tabindex="-1"><a class="header-anchor" href="#recommended-for-1" aria-hidden="true">#</a> Recommended for...</h3><p>Computers being used as general servers. Slightly more overhead but avoids possible conflicts with other services.</p><h3 id="installation-2" tabindex="-1"><a class="header-anchor" href="#installation-2" aria-hidden="true">#</a> Installation</h3>`,17),y={href:"https://hub.docker.com/r/mkerix/room-assistant/",target:"_blank",rel:"noopener noreferrer"},k=s("code",null,"host",-1),_=s("code",null,"/var/run/dbus",-1),w=t(`<details class="custom-container details"><summary>Example docker-compose.yml</summary><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3&#39;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">room-assistant</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> mkerix/room<span class="token punctuation">-</span>assistant
    <span class="token key atrule">network_mode</span><span class="token punctuation">:</span> host
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> /var/run/dbus<span class="token punctuation">:</span>/var/run/dbus
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="running-with-home-assistant-os" tabindex="-1"><a class="header-anchor" href="#running-with-home-assistant-os" aria-hidden="true">#</a> Running with Home Assistant OS</h2>`,2),x={href:"https://www.home-assistant.io/hassio/installing_third_party_addons/",target:"_blank",rel:"noopener noreferrer"},S=s("p",null,[s("code",null,"https://github.com/mKeRix/hassio-repo")],-1);function R(I,T){const i=o("RouterLink"),a=o("ExternalLinkIcon");return c(),u("div",null,[m,s("div",p,[v,s("p",null,[e("Also checkout the quickstart guides in the menu on the left! If you are planning on installing room-assistant on multiple hosts "),n(i,{to:"/guide/quickstart-ansible.html"},{default:r(()=>[e("Ansible")]),_:1}),e(" will automate the process for you.")])]),b,s("p",null,[e("Please make sure you have either NodeJS 16.x, 14.x or 12.x installed. The version provided by Raspbian by default is outdated. Installation guides for NodeJS can be found "),s("a",g,[e("here"),n(a)]),e(". For Pi Zero devices you will need to use a "),n(i,{to:"/guide/quickstart-pi-zero-w.html#installing-room-assistant"},{default:r(()=>[e("different installation process")]),_:1}),e(".")]),f,s("p",null,[e("This project provides official Docker images on "),s("a",y,[e("Docker Hub"),n(a)]),e(". You can either use the latest or a specific version by using the correct tag. It is strongly recommended to run this image with the "),k,e(" network, otherwise you may run into problems with many parts of the software. For auto-discovery functionality on Linux you will need to map the "),_,e(" volume.")]),w,s("p",null,[e("You can install room-assistant as Home Assistant OS add-on by "),s("a",x,[e("adding the following URL as repository"),n(a)]),e(":")]),S])}const q=d(h,[["render",R],["__file","installation.html.vue"]]);export{q as default};
