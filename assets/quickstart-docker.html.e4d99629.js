import{_ as i,r as l,o as c,c as p,a as n,b as s,d as e,w as t,e as o}from"./app.460bda5f.js";const u={},r=n("h1",{id:"docker",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#docker","aria-hidden":"true"},"#"),s(" Docker")],-1),d=n("p",null,"This page will guide you through setting up room-assistant with Docker and docker-compose.",-1),k=n("li",null,[n("p",null,[s("Create a new folder to store your room-assistant files in with "),n("code",null,"mkdir -p ~/room-assistant/config"),s(".")])],-1),m=n("code",null,"~/room-assistant/config/local.yml",-1),v=n("a",{href:"/integrations"},"integrations",-1),h=o(`<div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">global</span><span class="token punctuation">:</span>
  <span class="token key atrule">instanceName</span><span class="token punctuation">:</span> bedroom
  <span class="token key atrule">integrations</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> homeAssistant
    <span class="token punctuation">-</span> bluetoothClassic
<span class="token key atrule">homeAssistant</span><span class="token punctuation">:</span>
  <span class="token key atrule">mqttUrl</span><span class="token punctuation">:</span> <span class="token string">&#39;mqtt://&lt;mqtt-ip&gt;:1883&#39;</span>
  <span class="token key atrule">mqttOptions</span><span class="token punctuation">:</span>
    <span class="token key atrule">username</span><span class="token punctuation">:</span> youruser
    <span class="token key atrule">password</span><span class="token punctuation">:</span> yourpass
<span class="token key atrule">bluetoothClassic</span><span class="token punctuation">:</span>
  <span class="token key atrule">addresses</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> &lt;bluetooth<span class="token punctuation">-</span>mac<span class="token punctuation">-</span>of<span class="token punctuation">-</span>device<span class="token punctuation">-</span>to<span class="token punctuation">-</span>track<span class="token punctuation">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),b=o(`<li><p>Create the file <code>~/room-assistant/docker-compose.yml</code> with the content below. Note that the <code>/var/run/dbus</code> volume only needs to be mounted on Linux systems. Other systems do not have auto discovery capabilities in Docker.</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3&#39;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">room-assistant</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> mkerix/room<span class="token punctuation">-</span>assistant
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped
    <span class="token key atrule">network_mode</span><span class="token punctuation">:</span> host
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> /var/run/dbus<span class="token punctuation">:</span>/var/run/dbus
      <span class="token punctuation">-</span> &lt;host<span class="token punctuation">-</span>path<span class="token punctuation">-</span>to<span class="token punctuation">&gt;</span>/room<span class="token punctuation">-</span>assistant/config<span class="token punctuation">:</span>/room<span class="token punctuation">-</span>assistant/config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>From the <code>~/room-assistant</code> directory run <code>docker-compose up</code>. You should see all configured integrations load and the MQTT connection being established in the logs. New entities should now be appearing under the MQTT integration in Home Assistant Core, which can be viewed in Settings &gt; Integrations. Congratulations, you are done! \u{1F38A}</p></li>`,2);function g(y,_){const a=l("RouterLink");return c(),p("div",null,[r,d,n("ol",null,[k,n("li",null,[n("p",null,[s("Create the file "),m,s(" and put your configuration into it. The example below configures the "),e(a,{to:"/integrations/home-assistant.html"},{default:t(()=>[s("Home Assistant Core")]),_:1}),s(" and "),e(a,{to:"/integrations/bluetooth-classic.html"},{default:t(()=>[s("Bluetooth Classic")]),_:1}),s(" integrations, but there are many others to choose from. For all options take a look at the "),v,s(" section.")]),h]),b])])}const w=i(u,[["render",g],["__file","quickstart-docker.html.vue"]]);export{w as default};
